# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  # Fast build and unit tests
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'

    - name: Build
      run: go build -v ./...

    - name: Run Unit Tests
      run: go test -v -short ./...
      
  # Integration tests with database services
  integration-tests:
    runs-on: ubuntu-latest
    needs: build
    
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: testpass
          MYSQL_DATABASE: testdata
        ports:
          - 3307:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
      
      neo4j:
        image: neo4j:4.4
        env:
          NEO4J_AUTH: neo4j/testpass
          NEO4J_ACCEPT_LICENSE_AGREEMENT: 'yes'
        ports:
          - 7474:7474
          - 7687:7687
        options: --health-cmd="wget --no-verbose --tries=1 --spider http://localhost:7474 || exit 1" --health-interval=30s --health-timeout=10s --health-retries=5

    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'

    - name: Wait for services and setup database
      run: |
        echo "Waiting for MySQL to be ready..."
        for i in {1..60}; do
          if mysqladmin ping -h 127.0.0.1 -P 3307 -u root -ptestpass --silent 2>/dev/null; then
            echo "MySQL is ready!"
            break
          fi
          echo "Attempt $i/60: MySQL not ready yet, waiting 2 seconds..."
          sleep 2
        done
        
        echo "Waiting for Neo4j to be ready..."
        for i in {1..60}; do
          if curl -f http://localhost:7474 > /dev/null 2>&1; then
            echo "Neo4j is ready!"
            break
          fi
          echo "Attempt $i/60: Neo4j not ready yet, waiting 2 seconds..."
          sleep 2
        done
        
        echo "Setting up test database..."
        mysql -h 127.0.0.1 -P 3307 -u root -ptestpass testdata -e "
        CREATE TABLE IF NOT EXISTS testdata_uzly (
          id INT PRIMARY KEY,
          id_typu INT,
          infix VARCHAR(255),
          nazev VARCHAR(255),
          prefix VARCHAR(255)
        );
        CREATE TABLE IF NOT EXISTS testdata_uzly_php_action (
          id_node INT,
          php_code TEXT
        );
        INSERT IGNORE INTO testdata_uzly (id, id_typu, infix, nazev, prefix) VALUES 
        (1, 17, 'test', 'Test Node', 'pre_'),
        (2, 17, 'test2', 'Test Node 2', 'pre_');
        INSERT IGNORE INTO testdata_uzly_php_action (id_node, php_code) VALUES 
        (1, 'echo "hello";'),
        (2, 'echo "world";');
        "

    - name: Run Integration Tests
      env:
        GO_ENV: test
        CONFIG_PATH: config/config-test.yml
      run: go test -v -timeout 10m ./internal/tests/integration
